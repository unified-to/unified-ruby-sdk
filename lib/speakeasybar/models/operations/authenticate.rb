# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/apierror'
require_relative '../shared/error'

module OpenApiSDK
  module Operations

    class AuthenticateRequestBody < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :password, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('password') } }

      field :username, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('username') } }


      sig { params(password: T.nilable(String), username: T.nilable(String)).void }
      def initialize(password: nil, username: nil)
        @password = password
        @username = username
      end
    end

    # The api key to use for authenticated endpoints.
    class Authenticate200ApplicationJSON < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :token, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('token') } }


      sig { params(token: T.nilable(String)).void }
      def initialize(token: nil)
        @token = token
      end
    end


    class AuthenticateResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # HTTP response status code for this operation
      field :status_code, Integer
      # An error occurred interacting with the API.
      field :api_error, T.nilable(Shared::APIError)
      # The api key to use for authenticated endpoints.
      field :authenticate_200_application_json_object, T.nilable(Operations::Authenticate200ApplicationJSON)
      # An unknown error occurred interacting with the API.
      field :error, T.nilable(Shared::Error)
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, T.nilable(Faraday::Response)


      sig { params(content_type: String, status_code: Integer, api_error: T.nilable(Shared::APIError), authenticate_200_application_json_object: T.nilable(Operations::Authenticate200ApplicationJSON), error: T.nilable(Shared::Error), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, api_error: nil, authenticate_200_application_json_object: nil, error: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @api_error = api_error
        @authenticate_200_application_json_object = authenticate_200_application_json_object
        @error = error
        @raw_response = raw_response
      end
    end
  end
end
