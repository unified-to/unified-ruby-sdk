# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Operations
    

      class CreateScimGroupsRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :scim_group, Models::Shared::ScimGroup, { 'request': { 'media_type': 'application/json' } }
        # ID of the connection
        field :connection_id, ::String, { 'path_param': { 'field_name': 'connection_id', 'style': 'simple', 'explode': false } }

        sig { params(scim_group: Models::Shared::ScimGroup, connection_id: ::String).void }
        def initialize(scim_group:, connection_id:)
          @scim_group = scim_group
          @connection_id = connection_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @scim_group == other.scim_group
          return false unless @connection_id == other.connection_id
          true
        end
      end
    end
  end
end
