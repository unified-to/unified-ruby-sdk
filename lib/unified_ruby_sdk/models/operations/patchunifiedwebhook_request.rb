# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Operations
    

      class PatchUnifiedWebhookRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # A webhook is used to POST new/updated information to your server.
        field :webhook, Models::Shared::Webhook, { 'request': { 'media_type': 'application/json' } }
        # ID of the Webhook
        field :id, ::String, { 'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': false } }

        sig { params(webhook: Models::Shared::Webhook, id: ::String).void }
        def initialize(webhook:, id:)
          @webhook = webhook
          @id = id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @webhook == other.webhook
          return false unless @id == other.id
          true
        end
      end
    end
  end
end
