# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Operations
  

    class ListCalendarRecordingsRequest < ::Crystalline::FieldAugmented
      extend T::Sig

      # ID of the connection
      field :connection_id, ::String, { 'path_param': { 'field_name': 'connection_id', 'style': 'simple', 'explode': false } }

      field :end_le, T.nilable(::String), { 'query_param': { 'field_name': 'end_le', 'style': 'form', 'explode': true } }

      field :event_id, T.nilable(::String), { 'query_param': { 'field_name': 'event_id', 'style': 'form', 'explode': true } }
      # Comma-delimited fields to return
      field :fields_, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': true } }

      field :limit, T.nilable(::Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }

      field :offset, T.nilable(::Float), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }

      field :order, T.nilable(::String), { 'query_param': { 'field_name': 'order', 'style': 'form', 'explode': true } }
      # Query string to search. eg. email address or name
      field :query, T.nilable(::String), { 'query_param': { 'field_name': 'query', 'style': 'form', 'explode': true } }

      field :sort, T.nilable(::String), { 'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': true } }

      field :start_gte, T.nilable(::String), { 'query_param': { 'field_name': 'start_gte', 'style': 'form', 'explode': true } }
      # Return only results whose updated date is equal or greater to this value
      field :updated_gte, T.nilable(::DateTime), { 'query_param': { 'field_name': 'updated_gte', 'style': 'form', 'explode': true } }


      sig { params(connection_id: ::String, end_le: T.nilable(::String), event_id: T.nilable(::String), fields_: T.nilable(T::Array[::String]), limit: T.nilable(::Float), offset: T.nilable(::Float), order: T.nilable(::String), query: T.nilable(::String), sort: T.nilable(::String), start_gte: T.nilable(::String), updated_gte: T.nilable(::DateTime)).void }
      def initialize(connection_id: nil, end_le: nil, event_id: nil, fields_: nil, limit: nil, offset: nil, order: nil, query: nil, sort: nil, start_gte: nil, updated_gte: nil)
        @connection_id = connection_id
        @end_le = end_le
        @event_id = event_id
        @fields_ = fields_
        @limit = limit
        @offset = offset
        @order = order
        @query = query
        @sort = sort
        @start_gte = start_gte
        @updated_gte = updated_gte
      end
    end
  end
end
