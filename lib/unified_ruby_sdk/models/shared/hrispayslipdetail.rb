# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class HrisPayslipDetail < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :amount, ::Float, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('amount') } }

      field :company_amount, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('company_amount') } }

      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('description') } }

      field :employee_amount, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('employee_amount') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }

      field :type, T.nilable(::UnifiedRubySDK::Shared::HrisPayslipDetailType), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::HrisPayslipDetailType, true) } }


      sig { params(amount: ::Float, company_amount: T.nilable(::Float), description: T.nilable(::String), employee_amount: T.nilable(::Float), name: T.nilable(::String), type: T.nilable(::UnifiedRubySDK::Shared::HrisPayslipDetailType)).void }
      def initialize(amount: nil, company_amount: nil, description: nil, employee_amount: nil, name: nil, type: nil)
        @amount = amount
        @company_amount = company_amount
        @description = description
        @employee_amount = employee_amount
        @name = name
        @type = type
      end
    end
  end
end
