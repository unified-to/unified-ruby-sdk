# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class VerificationResponseDetail
        extend T::Sig
        include Crystalline::MetadataFields


        field :download_url, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('download_url') } }

        field :is_failed_reason, Crystalline::Nilable.new(Crystalline::Boolean.new), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('is_failed_reason') } }

        field :is_private, Crystalline::Nilable.new(Crystalline::Boolean.new), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('is_private') } }

        field :parameter_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('parameter_id') } }

        field :text, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('text') } }

        field :title, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('title') } }

        sig { params(download_url: T.nilable(::String), is_failed_reason: T.nilable(T::Boolean), is_private: T.nilable(T::Boolean), parameter_id: T.nilable(::String), text: T.nilable(::String), title: T.nilable(::String)).void }
        def initialize(download_url: nil, is_failed_reason: nil, is_private: nil, parameter_id: nil, text: nil, title: nil)
          @download_url = download_url
          @is_failed_reason = is_failed_reason
          @is_private = is_private
          @parameter_id = parameter_id
          @text = text
          @title = title
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @download_url == other.download_url
          return false unless @is_failed_reason == other.is_failed_reason
          return false unless @is_private == other.is_private
          return false unless @parameter_id == other.parameter_id
          return false unless @text == other.text
          return false unless @title == other.title
          true
        end
      end
    end
  end
end
