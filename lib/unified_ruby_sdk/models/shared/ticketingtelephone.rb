# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class TicketingTelephone < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :telephone, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('telephone') } }

      field :type, T.nilable(::UnifiedRubySDK::Shared::TicketingTelephoneType), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::TicketingTelephoneType, true) } }


      sig { params(telephone: ::String, type: T.nilable(::UnifiedRubySDK::Shared::TicketingTelephoneType)).void }
      def initialize(telephone: nil, type: nil)
        @telephone = telephone
        @type = type
      end
    end
  end
end
