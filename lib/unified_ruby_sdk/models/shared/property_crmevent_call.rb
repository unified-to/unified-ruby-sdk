# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    
      # The call object, when type = call
      class PropertyCrmEventCall
        extend T::Sig
        include Crystalline::MetadataFields


        field :description, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('description') } }

        field :duration, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('duration') } }

        field :start_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('start_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        sig { params(description: T.nilable(::String), duration: T.nilable(::Float), start_at: T.nilable(::DateTime)).void }
        def initialize(description: nil, duration: nil, start_at: nil)
          @description = description
          @duration = duration
          @start_at = start_at
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @description == other.description
          return false unless @duration == other.duration
          return false unless @start_at == other.start_at
          true
        end
      end
    end
  end
end
