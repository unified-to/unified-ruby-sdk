# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class PropertyMessagingMessageAuthorMember < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :email, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('email') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }

      field :user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('user_id') } }


      sig { params(email: T.nilable(::String), name: T.nilable(::String), user_id: T.nilable(::String)).void }
      def initialize(email: nil, name: nil, user_id: nil)
        @email = email
        @name = name
        @user_id = user_id
      end
    end
  end
end
