# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class AtsGroup < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }

      field :type, T.nilable(::UnifiedRubySDK::Shared::AtsGroupType), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::AtsGroupType, true) } }


      sig { params(id: T.nilable(::String), name: T.nilable(::String), type: T.nilable(::UnifiedRubySDK::Shared::AtsGroupType)).void }
      def initialize(id: nil, name: nil, type: nil)
        @id = id
        @name = name
        @type = type
      end
    end
  end
end
