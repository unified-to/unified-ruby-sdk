# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class PropertyAccountingReportTrialBalance
        extend T::Sig
        include Crystalline::MetadataFields


        field :sub_items, T.nilable(T::Array[Models::Shared::AccountingTrialBalanceSubItem]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('sub_items') } }

        field :total_credit_amount, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('total_credit_amount') } }

        field :total_debit_amount, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('total_debit_amount') } }


        sig { params(sub_items: T.nilable(T::Array[Models::Shared::AccountingTrialBalanceSubItem]), total_credit_amount: T.nilable(::Float), total_debit_amount: T.nilable(::Float)).void }
        def initialize(sub_items: nil, total_credit_amount: nil, total_debit_amount: nil)
          @sub_items = sub_items
          @total_credit_amount = total_credit_amount
          @total_debit_amount = total_debit_amount
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @sub_items == other.sub_items
          return false unless @total_credit_amount == other.total_credit_amount
          return false unless @total_debit_amount == other.total_debit_amount
          true
        end
      end
    end
  end
end
