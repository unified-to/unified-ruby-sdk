# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class VerificationRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :candidate_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('candidate_id') } }

        field :created_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

        field :package_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('package_id') } }

        field :parameters, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::VerificationParameterInput)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('parameters') } }

        field :profile_addresses, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::VerificationAddress)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_addresses') } }

        field :profile_date_of_birth, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_date_of_birth') } }

        field :profile_emails, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_emails') } }

        field :profile_gender, Crystalline::Nilable.new(Models::Shared::ProfileGender), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_gender'), 'decoder': Utils.enum_from_string(Models::Shared::ProfileGender, true) } }

        field :profile_ip_address, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_ip_address') } }

        field :profile_name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_name') } }

        field :profile_national_identifier, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_national_identifier') } }

        field :profile_telephones, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('profile_telephones') } }

        field :raw, Crystalline::Nilable.new(Crystalline::Hash.new(Symbol, ::Object)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

        field :response_completed_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_completed_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :response_details, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::VerificationResponseDetail)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_details') } }
        # report download
        field :response_download_urls, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_download_urls') } }

        field :response_expires_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_expires_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :response_issued_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_issued_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :response_redirect_url, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_redirect_url') } }

        field :response_score, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_score') } }

        field :response_source, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_source') } }

        field :response_status, Crystalline::Nilable.new(Models::Shared::ResponseStatus), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('response_status'), 'decoder': Utils.enum_from_string(Models::Shared::ResponseStatus, true) } }

        field :target_url, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('target_url') } }

        field :updated_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        sig { params(candidate_id: T.nilable(::String), created_at: T.nilable(::DateTime), id: T.nilable(::String), package_id: T.nilable(::String), parameters: T.nilable(T::Array[Models::Shared::VerificationParameterInput]), profile_addresses: T.nilable(T::Array[Models::Shared::VerificationAddress]), profile_date_of_birth: T.nilable(::String), profile_emails: T.nilable(T::Array[::String]), profile_gender: T.nilable(Models::Shared::ProfileGender), profile_ip_address: T.nilable(::String), profile_name: T.nilable(::String), profile_national_identifier: T.nilable(::String), profile_telephones: T.nilable(T::Array[::String]), raw: T.nilable(T::Hash[Symbol, ::Object]), response_completed_at: T.nilable(::DateTime), response_details: T.nilable(T::Array[Models::Shared::VerificationResponseDetail]), response_download_urls: T.nilable(T::Array[::String]), response_expires_at: T.nilable(::DateTime), response_issued_at: T.nilable(::DateTime), response_redirect_url: T.nilable(::String), response_score: T.nilable(::Float), response_source: T.nilable(::String), response_status: T.nilable(Models::Shared::ResponseStatus), target_url: T.nilable(::String), updated_at: T.nilable(::DateTime)).void }
        def initialize(candidate_id: nil, created_at: nil, id: nil, package_id: nil, parameters: nil, profile_addresses: nil, profile_date_of_birth: nil, profile_emails: nil, profile_gender: nil, profile_ip_address: nil, profile_name: nil, profile_national_identifier: nil, profile_telephones: nil, raw: nil, response_completed_at: nil, response_details: nil, response_download_urls: nil, response_expires_at: nil, response_issued_at: nil, response_redirect_url: nil, response_score: nil, response_source: nil, response_status: nil, target_url: nil, updated_at: nil)
          @candidate_id = candidate_id
          @created_at = created_at
          @id = id
          @package_id = package_id
          @parameters = parameters
          @profile_addresses = profile_addresses
          @profile_date_of_birth = profile_date_of_birth
          @profile_emails = profile_emails
          @profile_gender = profile_gender
          @profile_ip_address = profile_ip_address
          @profile_name = profile_name
          @profile_national_identifier = profile_national_identifier
          @profile_telephones = profile_telephones
          @raw = raw
          @response_completed_at = response_completed_at
          @response_details = response_details
          @response_download_urls = response_download_urls
          @response_expires_at = response_expires_at
          @response_issued_at = response_issued_at
          @response_redirect_url = response_redirect_url
          @response_score = response_score
          @response_source = response_source
          @response_status = response_status
          @target_url = target_url
          @updated_at = updated_at
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @candidate_id == other.candidate_id
          return false unless @created_at == other.created_at
          return false unless @id == other.id
          return false unless @package_id == other.package_id
          return false unless @parameters == other.parameters
          return false unless @profile_addresses == other.profile_addresses
          return false unless @profile_date_of_birth == other.profile_date_of_birth
          return false unless @profile_emails == other.profile_emails
          return false unless @profile_gender == other.profile_gender
          return false unless @profile_ip_address == other.profile_ip_address
          return false unless @profile_name == other.profile_name
          return false unless @profile_national_identifier == other.profile_national_identifier
          return false unless @profile_telephones == other.profile_telephones
          return false unless @raw == other.raw
          return false unless @response_completed_at == other.response_completed_at
          return false unless @response_details == other.response_details
          return false unless @response_download_urls == other.response_download_urls
          return false unless @response_expires_at == other.response_expires_at
          return false unless @response_issued_at == other.response_issued_at
          return false unless @response_redirect_url == other.response_redirect_url
          return false unless @response_score == other.response_score
          return false unless @response_source == other.response_source
          return false unless @response_status == other.response_status
          return false unless @target_url == other.target_url
          return false unless @updated_at == other.updated_at
          true
        end
      end
    end
  end
end
