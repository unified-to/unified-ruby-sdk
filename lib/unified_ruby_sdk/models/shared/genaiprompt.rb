# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class GenaiPrompt < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :max_tokens, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('max_tokens') } }

      field :messages, T.nilable(T::Array[::UnifiedRubySDK::Shared::GenaiContent]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('messages') } }

      field :model_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('model_id') } }

      field :raw, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

      field :responses, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('responses') } }

      field :temperature, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('temperature') } }


      sig { params(max_tokens: T.nilable(::Float), messages: T.nilable(T::Array[::UnifiedRubySDK::Shared::GenaiContent]), model_id: T.nilable(::String), raw: T.nilable(T::Hash[Symbol, ::Object]), responses: T.nilable(T::Array[::String]), temperature: T.nilable(::Float)).void }
      def initialize(max_tokens: nil, messages: nil, model_id: nil, raw: nil, responses: nil, temperature: nil)
        @max_tokens = max_tokens
        @messages = messages
        @model_id = model_id
        @raw = raw
        @responses = responses
        @temperature = temperature
      end
    end
  end
end
