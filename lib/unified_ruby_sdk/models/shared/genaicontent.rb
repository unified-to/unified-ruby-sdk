# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class GenaiContent < ::Crystalline::FieldAugmented
      extend T::Sig


      field :content, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('content') } }

      field :role, T.nilable(::UnifiedRubySDK::Shared::Role), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('role'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::Role, true) } }


      sig { params(content: ::String, role: T.nilable(::UnifiedRubySDK::Shared::Role)).void }
      def initialize(content: nil, role: nil)
        @content = content
        @role = role
      end
    end
  end
end
