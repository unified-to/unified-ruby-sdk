# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class CommerceItemPrice < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :price, ::Float, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('price') } }

      field :compare_at_price, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('compare_at_price') } }

      field :currency, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('currency') } }


      sig { params(price: ::Float, compare_at_price: T.nilable(::Float), currency: T.nilable(::String)).void }
      def initialize(price: nil, compare_at_price: nil, currency: nil)
        @price = price
        @compare_at_price = compare_at_price
        @currency = currency
      end
    end
  end
end
