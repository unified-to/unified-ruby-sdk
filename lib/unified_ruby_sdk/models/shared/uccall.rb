# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class UcCall
        extend T::Sig
        include Crystalline::MetadataFields


        field :contact_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('contact_id') } }

        field :created_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :end_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('end_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

        field :raw, Crystalline::Nilable.new(Crystalline::Hash.new(Symbol, ::Object)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

        field :start_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('start_at'), 'decoder': Utils.datetime_from_iso_format(true) } }
        # The telephone number called
        field :telephone, Crystalline::Nilable.new(Models::Shared::PropertyUcCallTelephone), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('telephone') } }

        field :updated_at, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :user_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('user_id') } }

        sig { params(contact_id: T.nilable(::String), created_at: T.nilable(::DateTime), end_at: T.nilable(::DateTime), id: T.nilable(::String), raw: T.nilable(T::Hash[Symbol, ::Object]), start_at: T.nilable(::DateTime), telephone: T.nilable(Models::Shared::PropertyUcCallTelephone), updated_at: T.nilable(::DateTime), user_id: T.nilable(::String)).void }
        def initialize(contact_id: nil, created_at: nil, end_at: nil, id: nil, raw: nil, start_at: nil, telephone: nil, updated_at: nil, user_id: nil)
          @contact_id = contact_id
          @created_at = created_at
          @end_at = end_at
          @id = id
          @raw = raw
          @start_at = start_at
          @telephone = telephone
          @updated_at = updated_at
          @user_id = user_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @contact_id == other.contact_id
          return false unless @created_at == other.created_at
          return false unless @end_at == other.end_at
          return false unless @id == other.id
          return false unless @raw == other.raw
          return false unless @start_at == other.start_at
          return false unless @telephone == other.telephone
          return false unless @updated_at == other.updated_at
          return false unless @user_id == other.user_id
          true
        end
      end
    end
  end
end
