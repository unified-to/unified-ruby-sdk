# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    
      # The note object, when type = note
      class PropertyCrmEventNote
        extend T::Sig
        include Crystalline::MetadataFields


        field :description, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('description') } }

        field :title, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('title') } }

        sig { params(description: T.nilable(::String), title: T.nilable(::String)).void }
        def initialize(description: nil, title: nil)
          @description = description
          @title = title
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @description == other.description
          return false unless @title == other.title
          true
        end
      end
    end
  end
end
