# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  
    # The note object, when type = note
    class PropertyCrmEventNote < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('description') } }

      field :title, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('title') } }


      sig { params(description: T.nilable(::String), title: T.nilable(::String)).void }
      def initialize(description: nil, title: nil)
        @description = description
        @title = title
      end
    end
  end
end
