# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class AccountingContactPaymentMethod < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :type, ::UnifiedRubySDK::Shared::AccountingContactPaymentMethodType, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::AccountingContactPaymentMethodType, false) } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }


      sig { params(type: ::UnifiedRubySDK::Shared::AccountingContactPaymentMethodType, id: T.nilable(::String), name: T.nilable(::String)).void }
      def initialize(type: nil, id: nil, name: nil)
        @type = type
        @id = id
        @name = name
      end
    end
  end
end
