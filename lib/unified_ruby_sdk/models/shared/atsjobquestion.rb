# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class AtsJobQuestion < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :question, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('question') } }

      field :type, ::UnifiedRubySDK::Shared::AtsJobQuestionType, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::AtsJobQuestionType, false) } }

      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('description') } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

      field :options, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('options') } }

      field :prompt, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('prompt') } }

      field :required, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('required') } }


      sig { params(question: ::String, type: ::UnifiedRubySDK::Shared::AtsJobQuestionType, description: T.nilable(::String), id: T.nilable(::String), options: T.nilable(T::Array[::String]), prompt: T.nilable(::String), required: T.nilable(T::Boolean)).void }
      def initialize(question: nil, type: nil, description: nil, id: nil, options: nil, prompt: nil, required: nil)
        @question = question
        @type = type
        @description = description
        @id = id
        @options = options
        @prompt = prompt
        @required = required
      end
    end
  end
end
