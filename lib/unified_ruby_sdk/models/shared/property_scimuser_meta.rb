# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class PropertyScimUserMeta
        extend T::Sig
        include Crystalline::MetadataFields


        field :created, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created') } }

        field :last_modified, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('lastModified') } }

        field :location, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('location') } }

        field :resource_type, T.nilable(Models::Shared::PropertyScimUserMetaResourceType), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('resourceType'), 'decoder': Utils.enum_from_string(Models::Shared::PropertyScimUserMetaResourceType, true) } }

        field :version, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('version') } }


        sig { params(created: T.nilable(::String), last_modified: T.nilable(::String), location: T.nilable(::String), resource_type: T.nilable(Models::Shared::PropertyScimUserMetaResourceType), version: T.nilable(::String)).void }
        def initialize(created: nil, last_modified: nil, location: nil, resource_type: nil, version: nil)
          @created = created
          @last_modified = last_modified
          @location = location
          @resource_type = resource_type
          @version = version
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @created == other.created
          return false unless @last_modified == other.last_modified
          return false unless @location == other.location
          return false unless @resource_type == other.resource_type
          return false unless @version == other.version
          true
        end
      end
    end
  end
end
