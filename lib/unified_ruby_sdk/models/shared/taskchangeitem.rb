# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class TaskChangeItem
        extend T::Sig
        include Crystalline::MetadataFields


        field :field, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('field'), required: true } }

        field :from, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('from') } }

        field :to, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('to') } }

        sig { params(field: ::String, from: T.nilable(::String), to: T.nilable(::String)).void }
        def initialize(field:, from: nil, to: nil)
          @field = field
          @from = from
          @to = to
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @field == other.field
          return false unless @from == other.from
          return false unless @to == other.to
          true
        end
      end
    end
  end
end
