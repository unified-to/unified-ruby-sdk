# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class ScimUserGroups < ::Crystalline::FieldAugmented
      extend T::Sig


      field :value, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('value') } }

      field :dollar_ref, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('$ref') } }

      field :display, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('display') } }

      field :type, T.nilable(::UnifiedRubySDK::Shared::ScimUserGroupsType), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::ScimUserGroupsType, true) } }


      sig { params(value: ::String, dollar_ref: T.nilable(::String), display: T.nilable(::String), type: T.nilable(::UnifiedRubySDK::Shared::ScimUserGroupsType)).void }
      def initialize(value: nil, dollar_ref: nil, display: nil, type: nil)
        @value = value
        @dollar_ref = dollar_ref
        @display = display
        @type = type
      end
    end
  end
end
