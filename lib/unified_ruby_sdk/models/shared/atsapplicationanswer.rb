# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class AtsApplicationAnswer
        extend T::Sig
        include Crystalline::MetadataFields


        field :answers, Crystalline::Array.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('answers'), required: true } }

        field :question_id, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('question_id'), required: true } }

        sig { params(answers: T::Array[::String], question_id: ::String).void }
        def initialize(answers:, question_id:)
          @answers = answers
          @question_id = question_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @answers == other.answers
          return false unless @question_id == other.question_id
          true
        end
      end
    end
  end
end
