# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class PropertyIntegrationSupportWebhookEvents
        extend T::Sig
        include Crystalline::MetadataFields


        field :created, T.nilable(T::Array[Models::Shared::PropertyIntegrationSupportWebhookEventsCreated]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created') } }

        field :deleted, T.nilable(T::Array[Models::Shared::PropertyIntegrationSupportWebhookEventsDeleted]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('deleted') } }

        field :updated, T.nilable(T::Array[Models::Shared::PropertyIntegrationSupportWebhookEventsUpdated]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated') } }


        sig { params(created: T.nilable(T::Array[Models::Shared::PropertyIntegrationSupportWebhookEventsCreated]), deleted: T.nilable(T::Array[Models::Shared::PropertyIntegrationSupportWebhookEventsDeleted]), updated: T.nilable(T::Array[Models::Shared::PropertyIntegrationSupportWebhookEventsUpdated])).void }
        def initialize(created: nil, deleted: nil, updated: nil)
          @created = created
          @deleted = deleted
          @updated = updated
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @created == other.created
          return false unless @deleted == other.deleted
          return false unless @updated == other.updated
          true
        end
      end
    end
  end
end
