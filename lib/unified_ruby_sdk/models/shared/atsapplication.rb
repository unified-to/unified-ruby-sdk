# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class AtsApplication
        extend T::Sig
        include Crystalline::MetadataFields


        field :answers, T.nilable(T::Array[Models::Shared::AtsApplicationAnswer]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('answers') } }

        field :applied_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('applied_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :candidate_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('candidate_id') } }

        field :created_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :hired_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('hired_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

        field :job_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('job_id') } }

        field :metadata, T.nilable(T::Array[Models::Shared::AtsMetadata]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('metadata') } }

        field :offers, T.nilable(T::Array[Models::Shared::AtsOffer]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('offers') } }

        field :original_status, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('original_status') } }

        field :raw, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

        field :rejected_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('rejected_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

        field :rejected_reason, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('rejected_reason') } }

        field :source, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('source') } }

        field :status, T.nilable(Models::Shared::AtsApplicationStatus), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Models::Shared::AtsApplicationStatus, true) } }

        field :updated_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }


        sig { params(answers: T.nilable(T::Array[Models::Shared::AtsApplicationAnswer]), applied_at: T.nilable(::DateTime), candidate_id: T.nilable(::String), created_at: T.nilable(::DateTime), hired_at: T.nilable(::DateTime), id: T.nilable(::String), job_id: T.nilable(::String), metadata: T.nilable(T::Array[Models::Shared::AtsMetadata]), offers: T.nilable(T::Array[Models::Shared::AtsOffer]), original_status: T.nilable(::String), raw: T.nilable(T::Hash[Symbol, ::Object]), rejected_at: T.nilable(::DateTime), rejected_reason: T.nilable(::String), source: T.nilable(::String), status: T.nilable(Models::Shared::AtsApplicationStatus), updated_at: T.nilable(::DateTime)).void }
        def initialize(answers: nil, applied_at: nil, candidate_id: nil, created_at: nil, hired_at: nil, id: nil, job_id: nil, metadata: nil, offers: nil, original_status: nil, raw: nil, rejected_at: nil, rejected_reason: nil, source: nil, status: nil, updated_at: nil)
          @answers = answers
          @applied_at = applied_at
          @candidate_id = candidate_id
          @created_at = created_at
          @hired_at = hired_at
          @id = id
          @job_id = job_id
          @metadata = metadata
          @offers = offers
          @original_status = original_status
          @raw = raw
          @rejected_at = rejected_at
          @rejected_reason = rejected_reason
          @source = source
          @status = status
          @updated_at = updated_at
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @answers == other.answers
          return false unless @applied_at == other.applied_at
          return false unless @candidate_id == other.candidate_id
          return false unless @created_at == other.created_at
          return false unless @hired_at == other.hired_at
          return false unless @id == other.id
          return false unless @job_id == other.job_id
          return false unless @metadata == other.metadata
          return false unless @offers == other.offers
          return false unless @original_status == other.original_status
          return false unless @raw == other.raw
          return false unless @rejected_at == other.rejected_at
          return false unless @rejected_reason == other.rejected_reason
          return false unless @source == other.source
          return false unless @status == other.status
          return false unless @updated_at == other.updated_at
          true
        end
      end
    end
  end
end
