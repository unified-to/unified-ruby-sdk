# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Models
    module Shared
    

      class AccountingCashflowSection
        extend T::Sig
        include Crystalline::MetadataFields


        field :items, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::AccountingCashflowItem)), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('items') } }

        field :section_name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('section_name') } }

        field :total_amount, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('total_amount') } }

        sig { params(items: T.nilable(T::Array[Models::Shared::AccountingCashflowItem]), section_name: T.nilable(::String), total_amount: T.nilable(::Float)).void }
        def initialize(items: nil, section_name: nil, total_amount: nil)
          @items = items
          @section_name = section_name
          @total_amount = total_amount
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @items == other.items
          return false unless @section_name == other.section_name
          return false unless @total_amount == other.total_amount
          true
        end
      end
    end
  end
end
