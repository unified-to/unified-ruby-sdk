# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  
    # A deal represents an opportunity with companies and/or contacts
    class CrmDeal < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :amount, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('amount') } }

      field :closed_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('closed_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :company_ids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('company_ids') } }

      field :contact_ids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('contact_ids') } }

      field :created_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :currency, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('currency') } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

      field :lost_reason, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('lost_reason') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }

      field :pipeline, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('pipeline') } }

      field :pipeline_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('pipeline_id') } }

      field :probability, T.nilable(::Float), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('probability') } }

      field :raw, T.nilable(::UnifiedRubySDK::Shared::CrmDealRaw), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

      field :source, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('source') } }

      field :stage, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('stage') } }

      field :stage_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('stage_id') } }

      field :tags, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('tags') } }

      field :updated_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('user_id') } }

      field :won_reason, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('won_reason') } }


      sig { params(amount: T.nilable(::Float), closed_at: T.nilable(::DateTime), company_ids: T.nilable(T::Array[::String]), contact_ids: T.nilable(T::Array[::String]), created_at: T.nilable(::DateTime), currency: T.nilable(::String), id: T.nilable(::String), lost_reason: T.nilable(::String), name: T.nilable(::String), pipeline: T.nilable(::String), pipeline_id: T.nilable(::String), probability: T.nilable(::Float), raw: T.nilable(::UnifiedRubySDK::Shared::CrmDealRaw), source: T.nilable(::String), stage: T.nilable(::String), stage_id: T.nilable(::String), tags: T.nilable(T::Array[::String]), updated_at: T.nilable(::DateTime), user_id: T.nilable(::String), won_reason: T.nilable(::String)).void }
      def initialize(amount: nil, closed_at: nil, company_ids: nil, contact_ids: nil, created_at: nil, currency: nil, id: nil, lost_reason: nil, name: nil, pipeline: nil, pipeline_id: nil, probability: nil, raw: nil, source: nil, stage: nil, stage_id: nil, tags: nil, updated_at: nil, user_id: nil, won_reason: nil)
        @amount = amount
        @closed_at = closed_at
        @company_ids = company_ids
        @contact_ids = contact_ids
        @created_at = created_at
        @currency = currency
        @id = id
        @lost_reason = lost_reason
        @name = name
        @pipeline = pipeline
        @pipeline_id = pipeline_id
        @probability = probability
        @raw = raw
        @source = source
        @stage = stage
        @stage_id = stage_id
        @tags = tags
        @updated_at = updated_at
        @user_id = user_id
        @won_reason = won_reason
      end
    end
  end
end
