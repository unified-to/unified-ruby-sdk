# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class MetadataMetadata < ::Crystalline::FieldAugmented
      extend T::Sig


      field :name, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }

      field :object_type, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('object_type') } }

      field :created_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :format, T.nilable(::UnifiedRubySDK::Shared::Format), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('format'), 'decoder': Utils.enum_from_string(::UnifiedRubySDK::Shared::Format, true) } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

      field :objects, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('objects') } }

      field :options, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('options') } }

      field :original_format, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('original_format') } }

      field :raw, T.nilable(::UnifiedRubySDK::Shared::MetadataMetadataRaw), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

      field :slug, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('slug') } }

      field :updated_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(name: ::String, object_type: ::String, created_at: T.nilable(::DateTime), format: T.nilable(::UnifiedRubySDK::Shared::Format), id: T.nilable(::String), objects: T.nilable(T::Hash[Symbol, ::Object]), options: T.nilable(T::Array[::String]), original_format: T.nilable(::String), raw: T.nilable(::UnifiedRubySDK::Shared::MetadataMetadataRaw), slug: T.nilable(::String), updated_at: T.nilable(::DateTime)).void }
      def initialize(name: nil, object_type: nil, created_at: nil, format: nil, id: nil, objects: nil, options: nil, original_format: nil, raw: nil, slug: nil, updated_at: nil)
        @name = name
        @object_type = object_type
        @created_at = created_at
        @format = format
        @id = id
        @objects = objects
        @options = options
        @original_format = original_format
        @raw = raw
        @slug = slug
        @updated_at = updated_at
      end
    end
  end
end
