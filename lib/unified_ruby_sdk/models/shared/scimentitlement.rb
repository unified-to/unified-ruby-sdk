# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module UnifiedRubySDK
  module Shared
  

    class ScimEntitlement < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :value, ::String, { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('value') } }

      field :display, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('display') } }

      field :primary, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('primary') } }

      field :type, T.nilable(::String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('type') } }


      sig { params(value: ::String, display: T.nilable(::String), primary: T.nilable(T::Boolean), type: T.nilable(::String)).void }
      def initialize(value: nil, display: nil, primary: nil, type: nil)
        @value = value
        @display = display
        @primary = primary
        @type = type
      end
    end
  end
end
