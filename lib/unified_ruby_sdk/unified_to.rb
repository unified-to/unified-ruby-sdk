# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'faraday'
require 'faraday/multipart'
require 'faraday/retry'
require 'sorbet-runtime'
require_relative 'sdk_hooks/hooks'
require_relative 'utils/retries'

module UnifiedRubySDK
  extend T::Sig

  class UnifiedTo
    extend T::Sig

    attr_accessor :accounting, :account, :balancesheet, :bill, :category, :contact, :creditmemo, :invoice, :journal, :order, :organization, :profitloss, :purchaseorder, :report, :salesorder, :taxrate, :transaction, :trialbalance, :ats, :activity, :application, :applicationstatus, :candidate, :company, :document, :interview, :job, :scorecard, :calendar, :busy, :event, :link, :recording, :commerce, :collection, :inventory, :item, :location, :review, :crm, :deal, :lead, :pipeline, :enrich, :person, :genai, :model, :prompt, :hris, :device, :employee, :group, :payslip, :timeoff, :timeshift, :kms, :comment, :page, :space, :lms, :class_, :course, :instructor, :student, :martech, :list, :member, :messaging, :channel, :message, :metadata, :passthrough, :payment, :payout, :refund, :subscription, :repo, :branch, :commit, :pullrequest, :repository, :scim, :user, :storage, :file, :task, :project, :ticketing, :customer, :note, :ticket, :uc, :call, :unified, :apicall, :connection, :integration, :auth, :login, :issue, :webhook

    sig do
      params(
        client: T.nilable(Faraday::Connection),
        retry_config: T.nilable(::UnifiedRubySDK::Utils::RetryConfig),
        timeout_ms: T.nilable(Integer),
        security: T.nilable(Models::Shared::Security),
        security_source: T.nilable(T.proc.returns(Models::Shared::Security)),
        server_idx: T.nilable(Integer),
        server_url: T.nilable(String),
        url_params: T.nilable(T::Hash[Symbol, String])
      ).void
    end
    def initialize(client: nil, retry_config: nil, timeout_ms: nil, security: nil, security_source: nil, server_idx: nil, server_url: nil, url_params: nil)
      ## Instantiates the SDK configuring it with the provided parameters.
      # @param [T.nilable(Faraday::Connection)] client The faraday HTTP client to use for all operations
      # @param [T.nilable(::UnifiedRubySDK::Utils::RetryConfig)] retry_config The retry configuration to use for all operations
      # @param [T.nilable(Integer)] timeout_ms Request timeout in milliseconds for all operations
      # @param [T.nilable(Models::Shared::Security)] security: The security details required for authentication
      # @param [T.proc.returns(T.nilable(Models::Shared::Security))] security_source: A function that returns security details required for authentication
      # @param [T.nilable(::Integer)] server_idx The index of the server to use for all operations
      # @param [T.nilable(::String)] server_url The server URL to use for all operations
      # @param [T.nilable(::Hash<::Symbol, ::String>)] url_params Parameters to optionally template the server URL with

      connection_options = {
        request: {
          params_encoder: Faraday::FlatParamsEncoder
        }
      }
      connection_options[:request][:timeout] = (timeout_ms.to_f / 1000) unless timeout_ms.nil?

      client ||= Faraday.new(**connection_options) do |f|
        f.request :multipart, {}
        # f.response :logger, nil, { headers: true, bodies: true, errors: true }
      end

      if !server_url.nil?
        if !url_params.nil?
          server_url = Utils.template_url(server_url, url_params)
        end
      end

      server_idx = 0 if server_idx.nil?
      hooks = SDKHooks::Hooks.new
      @sdk_configuration = SDKConfiguration.new(
        client,
        hooks,
        retry_config,
        timeout_ms,
        security,
        security_source,
        server_url,
        server_idx
      )

      original_server_url = @sdk_configuration.get_server_details.first
      new_server_url, @sdk_configuration.client = hooks.sdk_init(base_url: original_server_url, client: client)
      @sdk_configuration.server_url = new_server_url if new_server_url != original_server_url

      init_sdks
    end

    sig { void }
    def init_sdks
      @accounting = Accounting.new(@sdk_configuration)
      @account = Account.new(@sdk_configuration)
      @balancesheet = Balancesheet.new(@sdk_configuration)
      @bill = Bill.new(@sdk_configuration)
      @category = Category.new(@sdk_configuration)
      @contact = Contact.new(@sdk_configuration)
      @creditmemo = Creditmemo.new(@sdk_configuration)
      @invoice = Invoice.new(@sdk_configuration)
      @journal = Journal.new(@sdk_configuration)
      @order = Order.new(@sdk_configuration)
      @organization = Organization.new(@sdk_configuration)
      @profitloss = Profitloss.new(@sdk_configuration)
      @purchaseorder = Purchaseorder.new(@sdk_configuration)
      @report = Report.new(@sdk_configuration)
      @salesorder = Salesorder.new(@sdk_configuration)
      @taxrate = Taxrate.new(@sdk_configuration)
      @transaction = Transaction.new(@sdk_configuration)
      @trialbalance = Trialbalance.new(@sdk_configuration)
      @ats = Ats.new(@sdk_configuration)
      @activity = Activity.new(@sdk_configuration)
      @application = Application.new(@sdk_configuration)
      @applicationstatus = Applicationstatus.new(@sdk_configuration)
      @candidate = Candidate.new(@sdk_configuration)
      @company = Company.new(@sdk_configuration)
      @document = Document.new(@sdk_configuration)
      @interview = Interview.new(@sdk_configuration)
      @job = Job.new(@sdk_configuration)
      @scorecard = Scorecard.new(@sdk_configuration)
      @calendar = Calendar.new(@sdk_configuration)
      @busy = Busy.new(@sdk_configuration)
      @event = Event.new(@sdk_configuration)
      @link = Link.new(@sdk_configuration)
      @recording = Recording.new(@sdk_configuration)
      @commerce = Commerce.new(@sdk_configuration)
      @collection = Collection.new(@sdk_configuration)
      @inventory = Inventory.new(@sdk_configuration)
      @item = Item.new(@sdk_configuration)
      @location = Location.new(@sdk_configuration)
      @review = Review.new(@sdk_configuration)
      @crm = Crm.new(@sdk_configuration)
      @deal = Deal.new(@sdk_configuration)
      @lead = Lead.new(@sdk_configuration)
      @pipeline = Pipeline.new(@sdk_configuration)
      @enrich = Enrich.new(@sdk_configuration)
      @person = Person.new(@sdk_configuration)
      @genai = Genai.new(@sdk_configuration)
      @model = Model.new(@sdk_configuration)
      @prompt = Prompt.new(@sdk_configuration)
      @hris = Hris.new(@sdk_configuration)
      @device = Device.new(@sdk_configuration)
      @employee = Employee.new(@sdk_configuration)
      @group = Group.new(@sdk_configuration)
      @payslip = Payslip.new(@sdk_configuration)
      @timeoff = Timeoff.new(@sdk_configuration)
      @timeshift = Timeshift.new(@sdk_configuration)
      @kms = Kms.new(@sdk_configuration)
      @comment = Comment.new(@sdk_configuration)
      @page = Page.new(@sdk_configuration)
      @space = Space.new(@sdk_configuration)
      @lms = Lms.new(@sdk_configuration)
      @class_ = Class.new(@sdk_configuration)
      @course = Course.new(@sdk_configuration)
      @instructor = Instructor.new(@sdk_configuration)
      @student = Student.new(@sdk_configuration)
      @martech = Martech.new(@sdk_configuration)
      @list = List.new(@sdk_configuration)
      @member = Member.new(@sdk_configuration)
      @messaging = Messaging.new(@sdk_configuration)
      @channel = Channel.new(@sdk_configuration)
      @message = Message.new(@sdk_configuration)
      @metadata = Metadata.new(@sdk_configuration)
      @passthrough = Passthrough.new(@sdk_configuration)
      @payment = Payment.new(@sdk_configuration)
      @payout = Payout.new(@sdk_configuration)
      @refund = Refund.new(@sdk_configuration)
      @subscription = Subscription.new(@sdk_configuration)
      @repo = Repo.new(@sdk_configuration)
      @branch = Branch.new(@sdk_configuration)
      @commit = Commit.new(@sdk_configuration)
      @pullrequest = Pullrequest.new(@sdk_configuration)
      @repository = Repository.new(@sdk_configuration)
      @scim = Scim.new(@sdk_configuration)
      @user = User.new(@sdk_configuration)
      @storage = Storage.new(@sdk_configuration)
      @file = File.new(@sdk_configuration)
      @task = Task.new(@sdk_configuration)
      @project = Project.new(@sdk_configuration)
      @ticketing = Ticketing.new(@sdk_configuration)
      @customer = Customer.new(@sdk_configuration)
      @note = Note.new(@sdk_configuration)
      @ticket = Ticket.new(@sdk_configuration)
      @uc = Uc.new(@sdk_configuration)
      @call = Call.new(@sdk_configuration)
      @unified = Unified.new(@sdk_configuration)
      @apicall = Apicall.new(@sdk_configuration)
      @connection = Connection.new(@sdk_configuration)
      @integration = Integration.new(@sdk_configuration)
      @auth = Auth.new(@sdk_configuration)
      @login = Login.new(@sdk_configuration)
      @issue = Issue.new(@sdk_configuration)
      @webhook = Webhook.new(@sdk_configuration)
    end
  end
end
