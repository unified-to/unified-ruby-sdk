# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/webhook'

module UnifiedRubySDK
  module Operations

    class Events < T::Enum
      enums do
        UPDATED = new('updated')
        CREATED = new('created')
      end
    end



    class CreateUnifiedWebhookRequest < UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig

      # ID of the connection
      field :connection_id, String, { 'path_param': { 'field_name': 'connection_id', 'style': 'simple', 'explode': false } }
      # The object to subscribe to
      field :object, String, { 'path_param': { 'field_name': 'object', 'style': 'simple', 'explode': false } }
      # Which events to subscribe to.
      field :events, T.nilable(T::Array[Operations::Events]), { 'query_param': { 'field_name': 'events', 'style': 'form', 'explode': true } }

      field :webhook, T.nilable(Shared::Webhook), { 'request': { 'media_type': 'application/json' } }


      sig { params(connection_id: String, object: String, events: T.nilable(T::Array[Operations::Events]), webhook: T.nilable(Shared::Webhook)).void }
      def initialize(connection_id: nil, object: nil, events: nil, webhook: nil)
        @connection_id = connection_id
        @object = object
        @events = events
        @webhook = webhook
      end
    end


    class CreateUnifiedWebhookResponse < UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # Successful
      field :webhook, T.nilable(Shared::Webhook)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, webhook: T.nilable(Shared::Webhook)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, webhook: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @webhook = webhook
      end
    end
  end
end
