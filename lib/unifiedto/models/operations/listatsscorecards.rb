# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module UnifiedRubySDK
  module Operations

    class ListAtsScorecardsRequest < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig

      # ID of the connection
      field :connection_id, String, { 'path_param': { 'field_name': 'connection_id', 'style': 'simple', 'explode': false } }
      # The application ID to filter results
      field :application_id, T.nilable(String), { 'query_param': { 'field_name': 'application_id', 'style': 'form', 'explode': true } }
      # The candidate ID to filter results
      field :candidate_id, T.nilable(String), { 'query_param': { 'field_name': 'candidate_id', 'style': 'form', 'explode': true } }
      # Comma-delimited fields to return
      field :fields, T.nilable(T::Array[String]), { 'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': true } }
      # The interview ID to filter results
      field :interview_id, T.nilable(String), { 'query_param': { 'field_name': 'interview_id', 'style': 'form', 'explode': true } }
      # The job ID
      field :job_id, T.nilable(String), { 'query_param': { 'field_name': 'job_id', 'style': 'form', 'explode': true } }

      field :limit, T.nilable(Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }

      field :offset, T.nilable(Float), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }

      field :order, T.nilable(String), { 'query_param': { 'field_name': 'order', 'style': 'form', 'explode': true } }
      # Query string to search. eg. email address or name
      field :query, T.nilable(String), { 'query_param': { 'field_name': 'query', 'style': 'form', 'explode': true } }

      field :sort, T.nilable(String), { 'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': true } }
      # Return only results whose updated date is equal or greater to this value
      field :updated_gte, T.nilable(DateTime), { 'query_param': { 'field_name': 'updated_gte', 'style': 'form', 'explode': true } }


      sig { params(connection_id: String, application_id: T.nilable(String), candidate_id: T.nilable(String), fields: T.nilable(T::Array[String]), interview_id: T.nilable(String), job_id: T.nilable(String), limit: T.nilable(Float), offset: T.nilable(Float), order: T.nilable(String), query: T.nilable(String), sort: T.nilable(String), updated_gte: T.nilable(DateTime)).void }
      def initialize(connection_id: nil, application_id: nil, candidate_id: nil, fields: nil, interview_id: nil, job_id: nil, limit: nil, offset: nil, order: nil, query: nil, sort: nil, updated_gte: nil)
        @connection_id = connection_id
        @application_id = application_id
        @candidate_id = candidate_id
        @fields = fields
        @interview_id = interview_id
        @job_id = job_id
        @limit = limit
        @offset = offset
        @order = order
        @query = query
        @sort = sort
        @updated_gte = updated_gte
      end
    end


    class ListAtsScorecardsResponse < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # Successful
      field :ats_scorecards, T.nilable(T::Array[Shared::AtsScorecard])


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, ats_scorecards: T.nilable(T::Array[Shared::AtsScorecard])).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, ats_scorecards: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @ats_scorecards = ats_scorecards
      end
    end
  end
end
