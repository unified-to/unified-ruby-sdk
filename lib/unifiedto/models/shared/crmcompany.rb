# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/property_crmcompany_address'
require_relative '../shared/property_crmcompany_raw'

module UnifiedRubySDK
  module Shared
    # A company represents an organization that optionally is associated with a deal and/or contacts
    class CrmCompany < UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :address, T.nilable(Shared::PropertyCrmCompanyAddress), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('address') } }

      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }
      # An array of deal IDs associated with this contact
      field :deal_ids, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('deal_ids') } }

      field :emails, T.nilable(T::Array[Shared::CrmEmail]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('emails') } }

      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }

      field :is_active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('is_active') } }

      field :name, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }
      # The raw data returned by the integration for this company
      field :raw, T.nilable(Shared::PropertyCrmCompanyRaw), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('raw') } }

      field :tags, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('tags') } }

      field :telephones, T.nilable(T::Array[Shared::CrmTelephone]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('telephones') } }

      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :websites, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('websites') } }


      sig { params(address: T.nilable(Shared::PropertyCrmCompanyAddress), created_at: T.nilable(DateTime), deal_ids: T.nilable(T::Array[String]), emails: T.nilable(T::Array[Shared::CrmEmail]), id: T.nilable(String), is_active: T.nilable(T::Boolean), name: T.nilable(String), raw: T.nilable(Shared::PropertyCrmCompanyRaw), tags: T.nilable(T::Array[String]), telephones: T.nilable(T::Array[Shared::CrmTelephone]), updated_at: T.nilable(DateTime), websites: T.nilable(T::Array[String])).void }
      def initialize(address: nil, created_at: nil, deal_ids: nil, emails: nil, id: nil, is_active: nil, name: nil, raw: nil, tags: nil, telephones: nil, updated_at: nil, websites: nil)
        @address = address
        @created_at = created_at
        @deal_ids = deal_ids
        @emails = emails
        @id = id
        @is_active = is_active
        @name = name
        @raw = raw
        @tags = tags
        @telephones = telephones
        @updated_at = updated_at
        @websites = websites
      end
    end
  end
end
