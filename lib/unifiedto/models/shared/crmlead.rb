# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/property_crmlead_address'
require_relative '../shared/property_crmlead_raw'

module OpenApiSDK
  module Shared

    class CrmLead < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :address, T.nilable(Shared::PropertyCrmLeadAddress), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('address') } }

      field :company_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('company_id') } }

      field :contact_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('contact_id') } }

      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :creator_user_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('creator_user_id') } }

      field :emails, T.nilable(T::Array[Shared::CrmEmail]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('emails') } }

      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }

      field :is_active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('is_active') } }

      field :name, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }

      field :raw, T.nilable(Shared::PropertyCrmLeadRaw), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('raw') } }

      field :source, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('source') } }

      field :status, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status') } }

      field :telephones, T.nilable(T::Array[Shared::CrmTelephone]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('telephones') } }

      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :user_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('user_id') } }


      sig { params(address: T.nilable(Shared::PropertyCrmLeadAddress), company_id: T.nilable(String), contact_id: T.nilable(String), created_at: T.nilable(DateTime), creator_user_id: T.nilable(String), emails: T.nilable(T::Array[Shared::CrmEmail]), id: T.nilable(String), is_active: T.nilable(T::Boolean), name: T.nilable(String), raw: T.nilable(Shared::PropertyCrmLeadRaw), source: T.nilable(String), status: T.nilable(String), telephones: T.nilable(T::Array[Shared::CrmTelephone]), updated_at: T.nilable(DateTime), user_id: T.nilable(String)).void }
      def initialize(address: nil, company_id: nil, contact_id: nil, created_at: nil, creator_user_id: nil, emails: nil, id: nil, is_active: nil, name: nil, raw: nil, source: nil, status: nil, telephones: nil, updated_at: nil, user_id: nil)
        @address = address
        @company_id = company_id
        @contact_id = contact_id
        @created_at = created_at
        @creator_user_id = creator_user_id
        @emails = emails
        @id = id
        @is_active = is_active
        @name = name
        @raw = raw
        @source = source
        @status = status
        @telephones = telephones
        @updated_at = updated_at
        @user_id = user_id
      end
    end
  end
end
