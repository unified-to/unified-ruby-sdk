# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/property_atsinterview_raw'

module OpenApiSDK
  module Shared

    class AtsInterviewStatus < T::Enum
      enums do
        SCHEDULED = new('SCHEDULED')
        AWAITING_FEEDBACK = new('AWAITING_FEEDBACK')
        COMPLETE = new('COMPLETE')
      end
    end



    class AtsInterview < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :application_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('application_id') } }

      field :candidate_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('candidate_id') } }

      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :end_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('end_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :external_event_xref, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('external_event_xref') } }

      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }

      field :job_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('job_id') } }

      field :location, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('location') } }

      field :raw, T.nilable(Shared::PropertyAtsInterviewRaw), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('raw') } }

      field :start_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('start_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :status, T.nilable(Shared::AtsInterviewStatus), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Shared::AtsInterviewStatus, true) } }

      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :user_ids, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('user_ids') } }


      sig { params(application_id: T.nilable(String), candidate_id: T.nilable(String), created_at: T.nilable(DateTime), end_at: T.nilable(DateTime), external_event_xref: T.nilable(String), id: T.nilable(String), job_id: T.nilable(String), location: T.nilable(String), raw: T.nilable(Shared::PropertyAtsInterviewRaw), start_at: T.nilable(DateTime), status: T.nilable(Shared::AtsInterviewStatus), updated_at: T.nilable(DateTime), user_ids: T.nilable(T::Array[String])).void }
      def initialize(application_id: nil, candidate_id: nil, created_at: nil, end_at: nil, external_event_xref: nil, id: nil, job_id: nil, location: nil, raw: nil, start_at: nil, status: nil, updated_at: nil, user_ids: nil)
        @application_id = application_id
        @candidate_id = candidate_id
        @created_at = created_at
        @end_at = end_at
        @external_event_xref = external_event_xref
        @id = id
        @job_id = job_id
        @location = location
        @raw = raw
        @start_at = start_at
        @status = status
        @updated_at = updated_at
        @user_ids = user_ids
      end
    end
  end
end
