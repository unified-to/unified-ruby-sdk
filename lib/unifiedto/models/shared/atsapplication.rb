# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/property_atsapplication_raw'

module UnifiedRubySDK
  module Shared

    class AtsApplicationStatus < T::Enum
      enums do
        NEW = new('NEW')
        REVIEWING = new('REVIEWING')
        SCREENING = new('SCREENING')
        SUBMITTED = new('SUBMITTED')
        FIRST_INTERVIEW = new('FIRST_INTERVIEW')
        SECOND_INTERVIEW = new('SECOND_INTERVIEW')
        THIRD_INTERVIEW = new('THIRD_INTERVIEW')
        BACKGROUND_CHECK = new('BACKGROUND_CHECK')
        OFFERED = new('OFFERED')
        ACCEPTED = new('ACCEPTED')
        HIRED = new('HIRED')
        REJECTED = new('REJECTED')
        WITHDRAWN = new('WITHDRAWN')
      end
    end



    class AtsApplication < UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :applied_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('applied_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :candidate_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('candidate_id') } }

      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }

      field :job_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('job_id') } }

      field :raw, T.nilable(Shared::PropertyAtsApplicationRaw), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('raw') } }

      field :rejected_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('rejected_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :rejected_reason, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('rejected_reason') } }

      field :source, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('source') } }

      field :status, T.nilable(Shared::AtsApplicationStatus), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Shared::AtsApplicationStatus, true) } }

      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(applied_at: T.nilable(DateTime), candidate_id: T.nilable(String), created_at: T.nilable(DateTime), id: T.nilable(String), job_id: T.nilable(String), raw: T.nilable(Shared::PropertyAtsApplicationRaw), rejected_at: T.nilable(DateTime), rejected_reason: T.nilable(String), source: T.nilable(String), status: T.nilable(Shared::AtsApplicationStatus), updated_at: T.nilable(DateTime)).void }
      def initialize(applied_at: nil, candidate_id: nil, created_at: nil, id: nil, job_id: nil, raw: nil, rejected_at: nil, rejected_reason: nil, source: nil, status: nil, updated_at: nil)
        @applied_at = applied_at
        @candidate_id = candidate_id
        @created_at = created_at
        @id = id
        @job_id = job_id
        @raw = raw
        @rejected_at = rejected_at
        @rejected_reason = rejected_reason
        @source = source
        @status = status
        @updated_at = updated_at
      end
    end
  end
end
