# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/property_atsjob_raw'

module UnifiedRubySDK
  module Shared

    class EmploymentType < T::Enum
      enums do
        FULL_TIME = new('FULL_TIME')
        PART_TIME = new('PART_TIME')
        CONTRACTOR = new('CONTRACTOR')
        INTERN = new('INTERN')
        CONSULTANT = new('CONSULTANT')
        VOLUNTEER = new('VOLUNTEER')
        CASUAL = new('CASUAL')
        SEASONAL = new('SEASONAL')
        FREELANCE = new('FREELANCE')
        OTHER = new('OTHER')
      end
    end



    class AtsJobStatus < T::Enum
      enums do
        ARCHIVED = new('ARCHIVED')
        PENDING = new('PENDING')
        DRAFT = new('DRAFT')
        OPEN = new('OPEN')
        CLOSED = new('CLOSED')
      end
    end



    class AtsJob < ::UnifiedRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :addresses, T.nilable(T::Array[Shared::AtsAddress]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('addresses') } }

      field :closed_at, T.nilable(DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('closed_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :compensation, T.nilable(T::Array[Shared::AtsCompensation]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('compensation') } }

      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :departments, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('departments') } }

      field :description, T.nilable(String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('description') } }

      field :employment_type, T.nilable(Shared::EmploymentType), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('employment_type'), 'decoder': Utils.enum_from_string(Shared::EmploymentType, true) } }

      field :hiring_manager_ids, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('hiring_manager_ids') } }

      field :id, T.nilable(String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('id') } }

      field :language_locale, T.nilable(String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('language_locale') } }

      field :name, T.nilable(String), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('name') } }

      field :public_job_urls, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('public_job_urls') } }

      field :raw, T.nilable(Shared::PropertyAtsJobRaw), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('raw') } }

      field :recruiter_ids, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('recruiter_ids') } }

      field :remote, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('remote') } }

      field :status, T.nilable(Shared::AtsJobStatus), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Shared::AtsJobStatus, true) } }

      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': ::UnifiedRubySDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(addresses: T.nilable(T::Array[Shared::AtsAddress]), closed_at: T.nilable(DateTime), compensation: T.nilable(T::Array[Shared::AtsCompensation]), created_at: T.nilable(DateTime), departments: T.nilable(T::Array[String]), description: T.nilable(String), employment_type: T.nilable(Shared::EmploymentType), hiring_manager_ids: T.nilable(T::Array[String]), id: T.nilable(String), language_locale: T.nilable(String), name: T.nilable(String), public_job_urls: T.nilable(T::Array[String]), raw: T.nilable(Shared::PropertyAtsJobRaw), recruiter_ids: T.nilable(T::Array[String]), remote: T.nilable(T::Boolean), status: T.nilable(Shared::AtsJobStatus), updated_at: T.nilable(DateTime)).void }
      def initialize(addresses: nil, closed_at: nil, compensation: nil, created_at: nil, departments: nil, description: nil, employment_type: nil, hiring_manager_ids: nil, id: nil, language_locale: nil, name: nil, public_job_urls: nil, raw: nil, recruiter_ids: nil, remote: nil, status: nil, updated_at: nil)
        @addresses = addresses
        @closed_at = closed_at
        @compensation = compensation
        @created_at = created_at
        @departments = departments
        @description = description
        @employment_type = employment_type
        @hiring_manager_ids = hiring_manager_ids
        @id = id
        @language_locale = language_locale
        @name = name
        @public_job_urls = public_job_urls
        @raw = raw
        @recruiter_ids = recruiter_ids
        @remote = remote
        @status = status
        @updated_at = updated_at
      end
    end
  end
end
